{
  "openapi": "3.0.1",
  "info": {
    "title": "Barter API",
    "version": "1.0.0",
    "description": "API for Barter application"
  },
  "tags": [
    {
      "name": "Product",
      "description": "Product management endpoints"
    },
    {
      "name": "User",
      "description": "User management endpoints"
    },
    {
      "name": "Chat",
      "description": "Chat functionality endpoints"
    }
  ],
  "paths": {
    "/api/product/getAllProducts/{userId}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get all products for a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
          
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFlux"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/getProductById/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMono"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/saveProduct": {
      "post": {
        "tags": ["Product"],
        "summary": "Save a new product",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON string of SaveProductInput"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          }
        }
      }
    },
    "/api/user/saveUser": {
      "post": {
        "tags": ["User"],
        "summary": "Save a new user",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON string of SaveUserInput"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        }
      }
    },
    "/api/user/getUserById/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMono"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/uploadImage": {
      "post": {
        "tags": ["Chat"],
        "summary": "Upload chat image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/updateUser": {
      "put": {
        "tags": ["User"],
        "summary": "Update an existing user",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON string of SaveUserInput"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          }
        }
      }
    },
    "/api/user/getUserSetup/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user setup by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMono"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/getCommonUsers/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get common users by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFlux"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/getBookBuddy": {
      "get": {
        "tags": ["User"],
        "summary": "Get book buddy",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFlux"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/saveRequest": {
      "post": {
        "tags": ["User"],
        "summary": "Save a request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request saved successfully"
          }
        }
      }
    },
    "/api/user/removeRequest": {
      "patch": {
        "tags": ["User"],
        "summary": "Remove a request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveRequestInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request removed successfully"
          }
        }
      }
    },
    "/api/user/deleteUserById/{id}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          }
        }
      }
    },
    "/api/product/getProductByUserId/{userId}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get products by user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFlux"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/deleteProductById/{id}": {
      "delete": {
        "tags": ["Product"],
        "summary": "Delete product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          }
        }
      }
    },
    "/api/product/getSearchResults": {
      "get": {
        "tags": ["Product"],
        "summary": "Get search results",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFlux"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/postComment": {
      "post": {
        "tags": ["Product"],
        "summary": "Post a comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment posted successfully"
          }
        }
      }
    },
    "/api/product/postLike": {
      "post": {
        "tags": ["Product"],
        "summary": "Post a like",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LikeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Like posted successfully"
          }
        }
      }
    },
    "/api/product/getByBarterFilter": {
      "get": {
        "tags": ["Product"],
        "summary": "Get products by barter filter",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFlux"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/getPostsBySearch": {
      "get": {
        "tags": ["Product"],
        "summary": "Get posts by search",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFlux"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/likeComment": {
      "post": {
        "tags": ["Product"],
        "summary": "Like a comment",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment liked successfully"
          }
        }
      }
    },
    "/api/group/save": {
      "post": {
        "tags": ["Group"],
        "summary": "Save a new group",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON string of SaveGroupInput"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created successfully"
          }
        }
      }
    },
    "/api/loadMessages/{id}": {
      "get": {
        "tags": ["Chat"],
        "summary": "Load messages for a conversation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMono"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/saveConnection/{id}": {
      "post": {
        "tags": ["User"],
        "summary": "Save a connection for a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveConversationInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Connection saved successfully"
          }
        }
      }
    },
    "/api/product/getComments/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get comments for a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMono"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponseMono": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ApiResponseFlux": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApiResponseMono"
        }
      },
      "SaveUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          }
        }
      },
      "ChatModel": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "uuid"
          },
          "to": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "isRead": {
            "type": "boolean"
          },
          "isEdited": {
            "type": "boolean"
          }
        }
      },
      "SaveConversationInput": {
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "string"
          },
          "isGroup": {
            "type": "boolean"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "groupImage": {
            "type": "string"
          }
        }
      },
      "SaveRequestInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "CommentInput": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "text": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": ["productId", "text", "userId"]
      },
      "LikeInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        }
      },
      "SaveGroupInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:7000",
      "description": "Local server"
    },
    {
      "url": "https://barter-backend-w0ef.onrender.com",
      "description": "Production server"
    }
  ]
}

